// <auto-generated />
using System;
using DwapiCentral.Cbs.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DwapiCentral.Cbs.Infrastructure.Migrations
{
    [DbContext(typeof(CbsContext))]
    partial class CbsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DwapiCentral.Cbs.Core.Model.Facility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<int?>("MasterFacilityId");

                    b.Property<string>("Name")
                        .HasMaxLength(120);

                    b.Property<int>("SiteCode");

                    b.HasKey("Id");

                    b.HasIndex("MasterFacilityId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("DwapiCentral.Cbs.Core.Model.FacilityManifest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountRecievied");

                    b.Property<int>("AmountSent");

                    b.Property<DateTime>("DateLogged");

                    b.Property<Guid>("FacilityId");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("FacilityManifests");
                });

            modelBuilder.Entity("DwapiCentral.Cbs.Core.Model.MasterFacility", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("County")
                        .HasMaxLength(120);

                    b.Property<string>("Name")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("MasterFacilities");
                });

            modelBuilder.Entity("DwapiCentral.Cbs.Core.Model.MasterPatientIndex", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FacilityId");

                    b.Property<int>("PatientPk");

                    b.Property<int>("SiteCode");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("MasterPatientIndices");
                });

            modelBuilder.Entity("DwapiCentral.Cbs.Core.Model.Facility", b =>
                {
                    b.HasOne("DwapiCentral.Cbs.Core.Model.MasterFacility")
                        .WithMany("Mentions")
                        .HasForeignKey("MasterFacilityId");
                });

            modelBuilder.Entity("DwapiCentral.Cbs.Core.Model.FacilityManifest", b =>
                {
                    b.HasOne("DwapiCentral.Cbs.Core.Model.Facility")
                        .WithMany("Manifests")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DwapiCentral.Cbs.Core.Model.MasterPatientIndex", b =>
                {
                    b.HasOne("DwapiCentral.Cbs.Core.Model.Facility")
                        .WithMany("MasterPatientIndices")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
